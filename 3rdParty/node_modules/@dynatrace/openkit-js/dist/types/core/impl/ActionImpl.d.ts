import { Action, WebRequestTracer } from '../../api';
import { OpenKitConfiguration, PrivacyConfiguration } from '../config/Configuration';
import { PayloadBuilderHelper } from './PayloadBuilderHelper';
import { SessionImpl } from './SessionImpl';
export declare class ActionImpl implements Action {
    readonly name: string;
    readonly startTime: number;
    private readonly session;
    private readonly payloadBuilder;
    private readonly config;
    readonly startSequenceNumber: number;
    readonly actionId: number;
    endSequenceNumber?: number;
    private readonly logger;
    private _endTime;
    get endTime(): number;
    constructor(name: string, startTime: number, session: SessionImpl, payloadBuilder: PayloadBuilderHelper, config: PrivacyConfiguration & OpenKitConfiguration);
    /**
     * @inheritDoc
     */
    reportValue(name: string, value: number | string | null | undefined): void;
    /**
     * @inheritDoc
     */
    reportEvent(name: string): void;
    /**
     * @inheritDoc
     */
    reportError(name: string, code: number, message: string): void;
    traceWebRequest(url: string): WebRequestTracer;
    leaveAction(): null;
    private isActionLeft;
}
//# sourceMappingURL=ActionImpl.d.ts.map