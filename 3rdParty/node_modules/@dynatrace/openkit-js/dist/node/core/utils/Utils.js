"use strict";
/*
 * Copyright 2019 Dynatrace LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.isFinite = exports.timeout = exports.truncate = exports.removeElement = void 0;
/**
 * Maximum size of all values passed to Dynatrace.
 */
const MAX_VALUE_LENGTH = 250;
/**
 * Removes an element from a given array.
 * If there are multiple elements of the same instance, only the first is removed.
 *
 * @param array The array to search in
 * @param element The element to remove.
 */
exports.removeElement = (array, element) => {
    const index = array.indexOf(element);
    if (index < 0) {
        return;
    }
    array.splice(index, 1);
};
exports.truncate = (str, maxLength = MAX_VALUE_LENGTH) => str.substr(0, maxLength);
exports.timeout = (milliseconds) => new Promise((res) => {
    setTimeout(res, milliseconds);
});
exports.isFinite = (n) => typeof n === 'number' && n !== Infinity && n !== -Infinity && !isNaN(n);
//# sourceMappingURL=Utils.js.map